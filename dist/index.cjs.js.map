{"version":3,"file":"index.cjs.js","sources":["../src/constants.ts","../src/api.ts"],"sourcesContent":["/** @public */\nexport const ROOTLY_ANNOTATION_ORG_ID = \"rootly.com/organization-id\";\n/** @public */\nexport const ROOTLY_ANNOTATION_SERVICE_ID = \"rootly.com/service-id\";\n/** @public */\nexport const ROOTLY_ANNOTATION_SERVICE_NAME = \"rootly.com/service-name\";\n/** @public */\nexport const ROOTLY_ANNOTATION_SERVICE_SLUG = \"rootly.com/service-slug\";\n/** @public */\nexport const ROOTLY_ANNOTATION_SERVICE_AUTO_IMPORT = \"rootly.com/service-auto-import\";\n/** @public */\nexport const ROOTLY_ANNOTATION_FUNCTIONALITY_NAME = \"rootly.com/functionality-name\";\n/** @public */\nexport const ROOTLY_ANNOTATION_FUNCTIONALITY_ID = \"rootly.com/functionality-id\";\n/** @public */\nexport const ROOTLY_ANNOTATION_FUNCTIONALITY_SLUG = \"rootly.com/functionality-slug\";\n/** @public */\nexport const ROOTLY_ANNOTATION_FUNCTIONALITY_AUTO_IMPORT = \"rootly.com/functionality-auto-import\";\n/** @public */\nexport const ROOTLY_ANNOTATION_TEAM_ID = \"rootly.com/team-id\";\n/** @public */\nexport const ROOTLY_ANNOTATION_TEAM_NAME = \"rootly.com/team-name\";\n/** @public */\nexport const ROOTLY_ANNOTATION_TEAM_SLUG = \"rootly.com/team-slug\";\n/** @public */\nexport const ROOTLY_ANNOTATION_TEAM_AUTO_IMPORT = \"rootly.com/team-auto-import\";","import { stringifyEntityRef } from '@backstage/catalog-model';\nimport qs from 'qs';\nimport {\n  RootlyEntity,\n  RootlyIncident,\n  RootlyService,\n  RootlyFunctionality,\n  RootlyTeam,\n  ROOTLY_ANNOTATION_FUNCTIONALITY_NAME,\n  ROOTLY_ANNOTATION_TEAM_NAME,\n  ROOTLY_ANNOTATION_SERVICE_NAME,\n} from '@rootly/backstage-plugin-common';\n\nexport type RootlyServicesFetchOpts = {\n  page?: {\n    number?: number;\n    size?: number;\n  };\n  filter?: object;\n  include?: string;\n};\n\nexport type RootlyFunctionalitiesFetchOpts = {\n  page?: {\n    number?: number;\n    size?: number;\n  };\n  filter?: object;\n  include?: string;\n};\n\nexport type RootlyTeamsFetchOpts = {\n  page?: {\n    number?: number;\n    size?: number;\n  };\n  filter?: object;\n  include?: string;\n};\n\nexport type RootlyIncidentsFetchOpts = {\n  page?: {\n    number?: number;\n    size?: number;\n  };\n  filter?: object;\n  include?: string;\n};\n\nexport interface Rootly {\n  getService(id_or_slug: String): Promise<RootlyServiceResponse>;\n  getServices(opts?: RootlyServicesFetchOpts): Promise<RootlyServicesResponse>;\n  getFunctionality(id_or_slug: String): Promise<RootlyFunctionalityResponse>;\n  getFunctionalities(\n    opts?: RootlyFunctionalitiesFetchOpts,\n  ): Promise<RootlyFunctionalitiesResponse>;\n  getTeam(id_or_slug: String): Promise<RootlyTeamResponse>;\n  getTeams(opts?: RootlyTeamsFetchOpts): Promise<RootlyTeamsResponse>;\n  getIncidents(\n    opts?: RootlyIncidentsFetchOpts,\n  ): Promise<RootlyIncidentsResponse>;\n\n  importServiceEntity(entity: RootlyEntity): Promise<RootlyServiceResponse>;\n  updateServiceEntity(\n    entity: RootlyEntity,\n    service: RootlyService,\n    old_service?: RootlyService,\n  ): Promise<RootlyServiceResponse>;\n  deleteServiceEntity(service: RootlyService): Promise<void>;\n\n  importFunctionalityEntity(\n    entity: RootlyEntity,\n  ): Promise<RootlyFunctionalityResponse>;\n  updateFunctionalityEntity(\n    entity: RootlyEntity,\n    functionality: RootlyFunctionality,\n    old_functionality?: RootlyFunctionality,\n  ): Promise<RootlyFunctionalityResponse>;\n  deleteFunctionalityEntity(functionality: RootlyFunctionality): Promise<void>;\n\n  importTeamEntity(entity: RootlyEntity): Promise<RootlyTeamResponse>;\n  updateTeamEntity(\n    entity: RootlyEntity,\n    functionality: RootlyTeam,\n    old_functionality?: RootlyTeam,\n  ): Promise<RootlyTeamResponse>;\n  deleteTeamEntity(team: RootlyTeam): Promise<void>;\n\n  getCreateIncidentURL(): string;\n  getListIncidents(): string;\n\n  getListIncidentsForServiceURL(service: RootlyService): string;\n  getServiceDetailsURL(service: RootlyService): string;\n  getServiceIncidentsChart(\n    service: RootlyService,\n    opts?: { period: string },\n  ): Promise<{ data: object }>;\n\n  getListIncidentsForFunctionalityURL(\n    functionality: RootlyFunctionality,\n  ): string;\n  getFunctionalityDetailsURL(functionality: RootlyFunctionality): string;\n  getFunctionalityIncidentsChart(\n    functionality: RootlyFunctionality,\n    opts?: { period: string },\n  ): Promise<{ data: object }>;\n\n  getListIncidentsForTeamURL(team: RootlyTeam): string;\n  getTeamDetailsURL(team: RootlyTeam): string;\n  getTeamIncidentsChart(\n    team: RootlyTeam,\n    opts?: { period: string },\n  ): Promise<{ data: object }>;\n}\n\nexport interface RootlyServiceResponse {\n  data: RootlyService;\n}\n\nexport interface RootlyServicesResponse {\n  meta: {\n    total_count: number;\n    total_pages: number;\n  };\n  data: RootlyService[];\n}\n\nexport interface RootlyFunctionalityResponse {\n  data: RootlyFunctionality;\n}\n\nexport interface RootlyFunctionalitiesResponse {\n  meta: {\n    total_count: number;\n    total_pages: number;\n  };\n  data: RootlyFunctionality[];\n}\n\nexport interface RootlyTeamResponse {\n  data: RootlyTeam;\n}\n\nexport interface RootlyTeamsResponse {\n  meta: {\n    total_count: number;\n    total_pages: number;\n  };\n  data: RootlyTeam[];\n}\n\nexport interface RootlyIncidentsResponse {\n  meta: {\n    total_count: number;\n    total_pages: number;\n  };\n  data: RootlyIncident[];\n  included: object[];\n  links: {\n    first: string;\n    last: string;\n    next?: string;\n    prev?: string;\n    self: string;\n  };\n}\n\nconst DEFAULT_PROXY_PATH = '/rootly/api';\n\ntype Options = {\n  /**\n   * apiProxyUrl used to access Rootly API through proxy\n   * Example: https://localhost:7021\n   */\n  apiProxyUrl: Promise<string>;\n\n  /**\n   * apiProxyPath used to access Rootly API through proxy\n   * Example: /rootly/api\n   */\n  apiProxyPath: string | undefined;\n\n  /**\n   * apiToken used to access Backstage backend\n   * Example: Bearer 12345678910\n   */\n  apiToken: Promise<{ token?: string | undefined }>;\n};\n\n/**\n * API to talk to Rootly.\n */\nexport class RootlyApi {\n  private readonly apiProxyUrl: Promise<string>;\n  private readonly apiProxyPath: string;\n  private readonly apiToken: Promise<{ token?: string | undefined }>;\n\n  constructor(opts: Options) {\n    this.apiProxyUrl = opts.apiProxyUrl;\n    this.apiProxyPath = opts.apiProxyPath ?? DEFAULT_PROXY_PATH;\n    this.apiToken = opts.apiToken;\n  }\n\n  private removeEmptyAttributes<T>(obj: T): T {\n    if (typeof obj !== 'object' || obj === null) {\n      return obj; // Return the value if it's not an object\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(this.removeEmptyAttributes) as unknown as T; // Recursively apply to array elements\n    }\n\n    return Object.fromEntries(\n      Object.entries(obj as Record<string, any>)\n        .filter(\n          ([_, value]) => value !== '' && value !== null && value !== undefined,\n        )\n        .map(([key, value]) => [key, this.removeEmptyAttributes(value)]),\n    ) as T;\n  }\n\n  private async fetch<T = any>(input: string, init?: RequestInit): Promise<T> {\n    const authedInit = await this.addAuthHeaders(init || {});\n\n    const resp = await fetch(\n      `${await this.apiProxyUrl}${this.apiProxyPath}${input}`,\n      authedInit,\n    );\n    if (!resp.ok) {\n      throw new Error(`Request failed with ${resp.status} ${resp.statusText}`, {\n        cause: { status: resp.status, statusText: resp.statusText },\n      });\n    }\n\n    return await resp.json();\n  }\n\n  private async call(input: string, init?: RequestInit): Promise<void> {\n    const authedInit = await this.addAuthHeaders(init || {});\n\n    const resp = await fetch(\n      `${await this.apiProxyUrl}${this.apiProxyPath}${input}`,\n      authedInit,\n    );\n    if (!resp.ok)\n      throw new Error(\n        `Request failed with ${resp.status}: ${resp.statusText}`,\n        { cause: { status: resp.status, statusText: resp.statusText } },\n      );\n  }\n\n  private async addAuthHeaders(init: RequestInit): Promise<RequestInit> {\n    const headers = init.headers || {};\n    const { token } = await this.apiToken;\n\n    return {\n      ...init,\n      headers: {\n        ...headers,\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    };\n  }\n\n  async getService(id_or_slug: String): Promise<RootlyServiceResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const response = await this.fetch<RootlyServiceResponse>(\n      `/v1/services/${id_or_slug}`,\n      init,\n    );\n    return response;\n  }\n\n  async getServices(\n    opts?: RootlyServicesFetchOpts,\n  ): Promise<RootlyServicesResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<RootlyServicesResponse>(\n      `/v1/services?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getFunctionality(\n    id_or_slug: String,\n  ): Promise<RootlyFunctionalityResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const response = await this.fetch<RootlyFunctionalityResponse>(\n      `/v1/functionalities/${id_or_slug}`,\n      init,\n    );\n    return response;\n  }\n\n  async getFunctionalities(\n    opts?: RootlyFunctionalitiesFetchOpts,\n  ): Promise<RootlyFunctionalitiesResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<RootlyFunctionalitiesResponse>(\n      `/v1/functionalities?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getTeam(id_or_slug: String): Promise<RootlyTeamResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const response = await this.fetch<RootlyTeamResponse>(\n      `/v1/teams/${id_or_slug}`,\n      init,\n    );\n    return response;\n  }\n\n  async getTeams(opts?: RootlyTeamsFetchOpts): Promise<RootlyTeamsResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<RootlyTeamsResponse>(\n      `/v1/teams?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getIncidents(\n    opts?: RootlyIncidentsFetchOpts,\n  ): Promise<RootlyIncidentsResponse> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<RootlyIncidentsResponse>(\n      `/v1/incidents?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getServiceIncidentsChart(\n    service: RootlyService,\n    opts?: { period: string },\n  ): Promise<{ data: object }> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<{ data: object }>(\n      `/v1/services/${service.id}/incidents_chart?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getFunctionalityIncidentsChart(\n    functionality: RootlyFunctionality,\n    opts?: { period: string },\n  ): Promise<{ data: object }> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<{ data: object }>(\n      `/v1/functionalities/${functionality.id}/incidents_chart?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async getTeamIncidentsChart(\n    team: RootlyTeam,\n    opts?: { period: string },\n  ): Promise<{ data: object }> {\n    const init = { headers: { 'Content-Type': 'application/vnd.api+json' } };\n    const params = qs.stringify(this.removeEmptyAttributes(opts), { encode: false });\n    const response = await this.fetch<{ data: object }>(\n      `/v1/teams/${team.id}/incidents_chart?${params}`,\n      init,\n    );\n    return response;\n  }\n\n  async importServiceEntity(\n    entity: RootlyEntity,\n  ): Promise<RootlyServiceResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n    const init = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'services',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_NAME] ||\n              entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyServiceResponse>(`/v1/services`, init);\n    return response;\n  }\n\n  async updateServiceEntity(\n    entity: RootlyEntity,\n    service: RootlyService,\n    old_service?: RootlyService,\n  ): Promise<RootlyServiceResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n\n    if (old_service?.id) {\n      const init1 = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/vnd.api+json' },\n        body: JSON.stringify({\n          data: {\n            type: 'services',\n            attributes: {\n              backstage_id: null,\n            },\n          },\n        }),\n      };\n\n      await this.call(`/v1/services/${old_service.id}`, init1);\n    }\n\n    const init2 = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'services',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[ROOTLY_ANNOTATION_SERVICE_NAME] ||\n              entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyServiceResponse>(\n      `/v1/services/${service.id}`,\n      init2,\n    );\n    return response;\n  }\n\n  async deleteServiceEntity(service: RootlyService): Promise<void> {\n    const init = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'services',\n          attributes: {\n            backstage_id: null,\n          },\n        },\n      }),\n    };\n\n    await this.call(`/v1/services/${service.id}`, init);\n  }\n\n  async importFunctionalityEntity(\n    entity: RootlyEntity,\n  ): Promise<RootlyFunctionalityResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n    const init = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'functionalities',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[\n                ROOTLY_ANNOTATION_FUNCTIONALITY_NAME\n              ] || entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyFunctionalityResponse>(\n      `/v1/functionalities`,\n      init,\n    );\n    return response;\n  }\n\n  async updateFunctionalityEntity(\n    entity: RootlyEntity,\n    functionality: RootlyFunctionality,\n    old_functionality?: RootlyFunctionality,\n  ): Promise<RootlyFunctionalityResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n\n    if (old_functionality?.id) {\n      const init1 = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/vnd.api+json' },\n        body: JSON.stringify({\n          data: {\n            type: 'functionalities',\n            attributes: {\n              backstage_id: null,\n            },\n          },\n        }),\n      };\n\n      await this.call(`/v1/functionalities/${old_functionality.id}`, init1);\n    }\n\n    const init2 = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'functionalities',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[\n                ROOTLY_ANNOTATION_FUNCTIONALITY_NAME\n              ] || entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyFunctionalityResponse>(\n      `/v1/functionalities/${functionality.id}`,\n      init2,\n    );\n    return response;\n  }\n\n  async deleteFunctionalityEntity(\n    functionality: RootlyFunctionality,\n  ): Promise<void> {\n    const init = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'functionalities',\n          attributes: {\n            backstage_id: null,\n          },\n        },\n      }),\n    };\n\n    await this.call(`/v1/functionalities/${functionality.id}`, init);\n  }\n\n  async importTeamEntity(entity: RootlyEntity): Promise<RootlyTeamResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n    const init = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'teams',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_NAME] ||\n              entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyTeamResponse>(`/v1/teams`, init);\n    return response;\n  }\n\n  async updateTeamEntity(\n    entity: RootlyEntity,\n    team: RootlyTeam,\n    old_team?: RootlyTeam,\n  ): Promise<RootlyTeamResponse> {\n    const entityTriplet = stringifyEntityRef({\n      namespace: entity.metadata.namespace,\n      kind: entity.kind,\n      name: entity.metadata.name,\n    });\n\n    if (old_team?.id) {\n      const init1 = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/vnd.api+json' },\n        body: JSON.stringify({\n          data: {\n            type: 'teams',\n            attributes: {\n              backstage_id: null,\n            },\n          },\n        }),\n      };\n\n      await this.call(`/v1/teams/${old_team.id}`, init1);\n    }\n\n    const init2 = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'teams',\n          attributes: {\n            name:\n              entity.metadata.annotations?.[ROOTLY_ANNOTATION_TEAM_NAME] ||\n              entity.metadata.name,\n            description: entity.metadata.description,\n            backstage_id: entityTriplet,\n            pagerduty_id:\n              entity.metadata.annotations?.['pagerduty.com/service-id'],\n          },\n        },\n      }),\n    };\n\n    const response = this.fetch<RootlyTeamResponse>(\n      `/v1/teams/${team.id}`,\n      init2,\n    );\n    return response;\n  }\n\n  async deleteTeamEntity(team: RootlyTeam): Promise<void> {\n    const init = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/vnd.api+json' },\n      body: JSON.stringify({\n        data: {\n          type: 'teams',\n          attributes: {\n            backstage_id: null,\n          },\n        },\n      }),\n    };\n\n    await this.call(`/v1/teams/${team.id}`, init);\n  }\n\n  static getCreateIncidentURL(): string {\n    return `https://rootly.com/account/incidents/new`;\n  }\n\n  static getListIncidents(): string {\n    return `https://rootly.com/account/incidents`;\n  }\n\n  static getListIncidentsForServiceURL(service: RootlyService): string {\n    const params = qs.stringify(\n      { filter: { filters: ['services'], services: [service.id] } },\n      { arrayFormat: 'brackets' },\n    );\n    return `https://rootly.com/account/incidents?${params}`;\n  }\n\n  static getListIncidentsForFunctionalityURL(\n    functionality: RootlyFunctionality,\n  ): string {\n    const params = qs.stringify(\n      { filter: { filters: ['functionalities'], groups: [functionality.id] } },\n      { arrayFormat: 'brackets' },\n    );\n    return `https://rootly.com/account/incidents?${params}`;\n  }\n\n  static getListIncidentsForTeamURL(team: RootlyTeam): string {\n    const params = qs.stringify(\n      { filter: { filters: ['groups'], groups: [team.id] } },\n      { arrayFormat: 'brackets' },\n    );\n    return `https://rootly.com/account/incidents?${params}`;\n  }\n\n  static getServiceDetailsURL(service: RootlyService): string {\n    return `https://rootly.com/account/services/${service.attributes.slug}`;\n  }\n\n  static getFunctionalityDetailsURL(\n    functionality: RootlyFunctionality,\n  ): string {\n    return `https://rootly.com/account/functionalities/${functionality.attributes.slug}`;\n  }\n\n  static getTeamDetailsURL(team: RootlyTeam): string {\n    return `https://rootly.com/account/teams/${team.attributes.slug}`;\n  }\n}\n"],"names":["qs","stringifyEntityRef","ROOTLY_ANNOTATION_SERVICE_NAME","ROOTLY_ANNOTATION_FUNCTIONALITY_NAME","ROOTLY_ANNOTATION_TEAM_NAME"],"mappings":"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"}